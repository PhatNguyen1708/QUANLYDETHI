alter session set "_ORACLE_SCRIPT"=true; 

create user CauHoiTracNghiem identified by 123

grant create session to CauHoiTracNghiem

grant create table to CauHoiTracNghiem

alter user CauHoiTracNghiem quota 100M on users

GRANT CREATE USER TO cauhoitracnghiem;
GRANT ALTER USER TO cauhoitracnghiem;
GRANT GRANT ANY PRIVILEGE TO cauhoitracnghiem;
GRANT SELECT ON SYS.DBA_USERS TO CauHoiTracNghiem;
GRANT SELECT ON SYS.DBA_PROFILES TO CauHoiTracNghiem;
GRANT CREATE PROFILE TO CauHoiTracNghiem;
GRANT CREATE ROLE TO CauHoiTracNghiem;
GRANT GRANT ANY PRIVILEGE TO CauHoiTracNghiem;


create user GV0003 identified by 123
grant create session to GV0003
alter user GV0003 PROFILE HocSinh
GRANT DATAENTRY_GiaoVien TO GV0003

----------ghi nhật ký và giải trình sử dụng Standard Auditing, trigger
---chạy sys:
grant create sequence to CauHoiTracNghiem;

CREATE SEQUENCE seq_audit_log
START WITH 1
INCREMENT BY 1
NOCACHE;

CREATE TABLE audit_log(
    logID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    actionTime TIMESTAMP DEFAULT CURRENT_TIMESTAMP,  
    ID VARCHAR2(12), --HOC SINH HOAC GIAO VIEN
    actionType VARCHAR2(50), --INSERT, UPDATE, DELETE
    tableName VARCHAR2(50),
    details NVARCHAR2(2000)
)

DROP TABLE audit_log


CREATE OR REPLACE TRIGGER trg_questions_audit
AFTER INSERT OR UPDATE OR DELETE ON CAUHOI
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        INSERT INTO audit_log ( ID, actionType, tableName, details)
        VALUES (USER, 'INSERT', 'CAUHOI', N'Đã thêm câu hỏi: ' || :NEW.CAUHOI);
    ELSIF UPDATING THEN
        INSERT INTO audit_log (ID, actionType, tableName, details)
        VALUES (USER, 'UPDATE', 'CAUHOI',
               N'Cập nhật câu hỏi từ: ' || :OLD.CAUHOI || N' thành: ' || :NEW.CAUHOI);
    ELSIF DELETING THEN
        INSERT INTO audit_log (ID, actionType, tableName, details)
        VALUES (USER, 'DELETE', 'CAUHOI', N'Đã xóa câu hỏi: ' || :OLD.CAUHOI);
    END IF;
END;
/

CREATE OR REPLACE TRIGGER trg_student_answers_audit
AFTER INSERT ON KETQUA
FOR EACH ROW
BEGIN
    INSERT INTO audit_log (ID, actionType, tableName, details)
    VALUES (:NEW.MSHS, 'INSERT', 'KETQUA',
            N'Đã nộp bài ' || :NEW.MAMONHOC || N', Mã đề thi: ' || :NEW.MADETHI || N', vào lúc: ' || :NEW.THOIGIAN_HOANTHANH);
END;





--------------Fine-Grained Auditing------------------------
GRANT EXECUTE ON DBMS_FGA TO CauHoiTracNghiem;
GRANT SELECT ON ACCOUNT TO CauHoiTracNghiem;
GRANT INSERT, SELECT ON AUDIT_LOG TO CAUHOITRACNGHIEM;
GRANT AUDIT_ADMIN TO CauHoiTracNghiem;
GRANT EXECUTE ON DBA_FGA_AUDIT_TRAIL TO CauHoiTracNghiem;

DROP TABLE ACCOUNT
create table ACCOUNT
(
    ID varchar2(12) not null,
    MATKHAU NVARCHAR2(2000)
);

INSERT INTO ACCOUNT (ID, MATKHAU) 
VALUES ('A001', '123');

SELECT * FROM ACCOUNT;
INSERT INTO ACCOUNT (ID, MATKHAU) VALUES ('A002', '123');
DELETE FROM ACCOUNT WHERE ID = 'A002'

SELECT * FROM ACCOUNT;
INSERT INTO ACCOUNT (ID, MATKHAU) VALUES ('A003', '123');
DELETE FROM ACCOUNT WHERE ID = 'A003'

SELECT * FROM ACCOUNT;
INSERT INTO ACCOUNT (ID, MATKHAU) VALUES ('A004', '123');
DELETE FROM ACCOUNT WHERE ID = 'A004'

--Bảng ghi nhật ký
drop table AUDIT_LOG;

CREATE TABLE AUDIT_LOG (
    ID_AUDIT NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CURRENT_USER NVARCHAR2(50),
    ACTION NVARCHAR2(50),
    SQL_TEXT CLOB,
    TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
select * from AUDIT_LOG


--xử lý ghi nhật ký--
CREATE OR REPLACE PROCEDURE AUDIT_HANDLER (
    schema_name IN VARCHAR2,
    table_name IN VARCHAR2,
    policy_name IN VARCHAR2,
    audit_event IN VARCHAR2
)
IS
    --SQL_TEXT CLOB;
BEGIN    
    INSERT INTO AUDIT_LOG(CURRENT_USER, ACTION, TIMESTAMP)
    VALUES (USER, audit_event, SYSTIMESTAMP);
    
    COMMIT;
END;
/

--thêm chính sách FGA vào bảng --
BEGIN
    DBMS_FGA.DROP_POLICY(
        OBJECT_SCHEMA   => 'CAUHOITRACNGHIEM',
        OBJECT_NAME     => 'ACCOUNT',
        POLICY_NAME     => 'ACCOUNT_AUDIT_POLICY'
    );
END;
/

BEGIN 
    DBMS_FGA.ADD_POLICY(
        OBJECT_SCHEMA   => 'CAUHOITRACNGHIEM',      --THÊM SCHEMA CHỨA BẢNG ACCOUNT
        OBJECT_NAME     => 'ACCOUNT',               --TÊN BẢNG CẦN GIÁM SÁT
        POLICY_NAME     => 'ACCOUNT_AUDIT_POLICY',  --TÊN CHÍNH SÁCH
        AUDIT_CONDITION => NULL,                    --GIÁM SÁT ALL ACTION
        AUDIT_COLUMN    => NULL,                    --GIÁM SÁT ALL COLUMN
        HANDLER_SCHEMA  => 'CAUHOITRACNGHIEM',      --TÊN SCHEMA CHỨA HÀM XỬ LÝ
        HANDLER_MODULE  => 'AUDIT_HANDLER',         --TÊN HÀM XỬ LÝ NHẬT KÝ
        ENABLE          => TRUE
    );
END;
/

--KT CHÍNH SÁCH--

SELECT * FROM AUDIT_LOG;

SELECT CURRENT_USER, OBJECT_NAME, POLICY_NAME, SQL_TEXT, TIMESTAMP
FROM DBA_FGA_AUDIT_TRAIL
WHERE OBJECT_NAME = 'ACCOUNT';

DESCRIBE DBA_FGA_AUDIT_TRAIL;


CREATE OR REPLACE FUNCTION exam_policy_function (USER in varchar2) 
RETURN VARCHAR2 IS
    condition varchar2(4000);
BEGIN
    IF USER IN (SELECT MSGV FROM GIAOVIEN) THEN
        
        select 'MAMONHOC in (' || LISTAGG(MAMONHOC,',') within group (order by MAMONHOC) || ')'
        into condition
        from GIAOVIEN
        where MSGV = (SELECT ID FROM TAIKHOAN WHERE ID = USER);
        
        RETURN condition;
    ELSIF USER IN (SELECT MSHS FROM HOCSINH) THEN
       
        select 'ID in (' || LISTAGG(ID,',') within group (order by ID) || ')'
        into condition
        from T?IKHOAN
        where ID=USER;
        
        RETURN condition;
    ELSE
        -- Ngư?i dùng khác không có quy?n
        RETURN 1=0;
    END IF;
END;
/
select * from dba_users
alter user HS00001 unlock

BEGIN
    DBMS_RLS.ADD_POLICY(
        object_schema   => 'CauHoiTracNghiem',
        object_name     => 'KETQUA',
        policy_name     => 'EXAM_RESULTS_POLICY',
        function_schema => 'CauHoiTracNghiem',
        policy_function => 'EXAM_POLICY_FUNCTION',
        statement_types => 'SELECT'
    );
END;

